// Generated by data binding compiler. Do not edit!
package com.example.view.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.citylink.model.BookingModel;
import com.example.view.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentBookingDetailsBinding extends ViewDataBinding {
  @NonNull
  public final TextView bookingId;

  @NonNull
  public final TextView bookingStatus;

  @NonNull
  public final TextView bookingTime;

  @NonNull
  public final TextView customeName;

  @NonNull
  public final TextView destinationAddress;

  @NonNull
  public final ImageView destinationAddressPin;

  @NonNull
  public final TextView destinationLocation;

  @NonNull
  public final TextView email;

  @NonNull
  public final ScrollView homeScrollView;

  @NonNull
  public final TextView mobNo;

  @NonNull
  public final LinearLayout noData;

  @NonNull
  public final TextView pickUpTime;

  @NonNull
  public final TextView sourceAddress;

  @NonNull
  public final TextView sourceAddressName;

  @NonNull
  public final ImageView sourceAddressPin;

  @NonNull
  public final TextView sourceLocation;

  @Bindable
  protected BookingModel mBookingModel;

  protected FragmentBookingDetailsBinding(Object _bindingComponent, View _root,
      int _localFieldCount, TextView bookingId, TextView bookingStatus, TextView bookingTime,
      TextView customeName, TextView destinationAddress, ImageView destinationAddressPin,
      TextView destinationLocation, TextView email, ScrollView homeScrollView, TextView mobNo,
      LinearLayout noData, TextView pickUpTime, TextView sourceAddress, TextView sourceAddressName,
      ImageView sourceAddressPin, TextView sourceLocation) {
    super(_bindingComponent, _root, _localFieldCount);
    this.bookingId = bookingId;
    this.bookingStatus = bookingStatus;
    this.bookingTime = bookingTime;
    this.customeName = customeName;
    this.destinationAddress = destinationAddress;
    this.destinationAddressPin = destinationAddressPin;
    this.destinationLocation = destinationLocation;
    this.email = email;
    this.homeScrollView = homeScrollView;
    this.mobNo = mobNo;
    this.noData = noData;
    this.pickUpTime = pickUpTime;
    this.sourceAddress = sourceAddress;
    this.sourceAddressName = sourceAddressName;
    this.sourceAddressPin = sourceAddressPin;
    this.sourceLocation = sourceLocation;
  }

  public abstract void setBookingModel(@Nullable BookingModel bookingModel);

  @Nullable
  public BookingModel getBookingModel() {
    return mBookingModel;
  }

  @NonNull
  public static FragmentBookingDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_booking_details, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentBookingDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentBookingDetailsBinding>inflateInternal(inflater, R.layout.fragment_booking_details, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentBookingDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_booking_details, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentBookingDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentBookingDetailsBinding>inflateInternal(inflater, R.layout.fragment_booking_details, null, false, component);
  }

  public static FragmentBookingDetailsBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentBookingDetailsBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentBookingDetailsBinding)bind(component, view, R.layout.fragment_booking_details);
  }
}
